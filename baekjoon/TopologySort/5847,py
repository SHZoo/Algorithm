# boj 5847 Milk Scheduling
from collections import deque
import sys
import copy
input = sys.stdin.readline

n, m = map(int, input().split())
graph = [[] for _ in range(n+1)]
indegree = [0] * (n+1) 
time = [0]

for _ in range(n) :
    time.append(int(input()))

for _ in range(m) :
    u, v = map(int, input().split())
    graph[v].append(u)
    indegree[u] += 1

def topology_sort() :
    result = copy.deepcopy(time)
    queue = deque()
    for i in range(1, n+1) :
        if indegree[i] == 0 :
            queue.append(i)

    while queue :
        now = queue.popleft()
        for i in graph[now] :
            indegree[i] -= 1
            result[i] = max(result[i], result[now] + time[i])
            if indegree[i] == 0 :
                queue.append(i)
    return max(result)

print(topology_sort())